<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>statistics | SERDAR KORUR</title>
    <link>/tags/statistics/</link>
      <atom:link href="/tags/statistics/index.xml" rel="self" type="application/rss+xml" />
    <description>statistics</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Mon, 28 Oct 2019 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/img/logo.png</url>
      <title>statistics</title>
      <link>/tags/statistics/</link>
    </image>
    
    <item>
      <title>An intuitive real life example of a binomial distribution and how to simulate it in R: Learn it once, use it everyday</title>
      <link>/r/probability-distributions/</link>
      <pubDate>Mon, 28 Oct 2019 00:00:00 +0000</pubDate>
      <guid>/r/probability-distributions/</guid>
      <description>


&lt;p&gt;Learn. It is all about success and failure.&lt;/p&gt;
&lt;div id=&#34;what-are-binomial-distributions-and-why-are-they-so-useful&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;What are binomial distributions and why are they so useful?&lt;/h1&gt;
&lt;p&gt;When we repeat a set of events like 10 times coin flipping and each single event in a set has two possible outcomes (head or tails) think about &lt;strong&gt;Binomial distributions.&lt;/strong&gt; Each single event here is known as a Bernoulli Trial.&lt;/p&gt;
&lt;p&gt;Bi- in binomial distributions refers to the two outcomes usually described as &lt;strong&gt;Success&lt;/strong&gt; or &lt;strong&gt;no Success.&lt;/strong&gt; A “yes” or “no”.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Probability distributions in general are used to predict future events&lt;/strong&gt; and often based on nasty looking mathematical formulas. But, there is also a beautiful thing here. For example the specific binomial distribution mathematical function can be used to predict the outcomes of any real life event which has two outcomes.&lt;/p&gt;
&lt;p&gt;Let’s start with a simple example.&lt;/p&gt;
&lt;div id=&#34;why-is-this-interesting&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Why is this interesting?&lt;/h2&gt;
&lt;p&gt;For example, playing with the coins, the two possibilities are getting heads (success) or tails (no success). And let’s say you have a of e.g. 50 times coin flipping. We can repeat this set as many times as we like and record how many times we got heads (success) in each repetition.&lt;/p&gt;
&lt;p&gt;And if plot the results we will have a probability distribution plot. And if you make enough repetitions you will approach a binomial probability distribution curve. We will do this in a minute. But, first generate data to draw our plot.&lt;/p&gt;
&lt;p&gt;We can use R to generate the data. We will generate random data from repeating set of 50-times coin flipping 100000 times and record the number of successes in each repetition.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;rbinom() function&lt;/strong&gt; can generate a given number of repeated (here 100.000) sets (50 times of coin flipping) of experiments. It requires 3 arguments.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;rbinom(&lt;/strong&gt;&lt;br /&gt;
n = number of repetitions = 100.000,&lt;br /&gt;
size = sample size = 50,&lt;br /&gt;
p = the probability of success (chance of throwing heads is 0.5)&lt;strong&gt;)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;R code can be used to find the exact probabilities. Let’s compare the probabilities of getting more than 25, 35 or even 49 heads. You can combine rbinom with mean function to find the percentage of the events with a chosen outcome.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Probability of getting 25 or more heads
mean(rbinom(100000, 50, .5) &amp;gt;= 25)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.55734&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Probability of getting 35 or more heads
mean(rbinom(100000, 50, .5) &amp;gt;= 35)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.00358&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Probability of getting 49 or more heads
mean(rbinom(100000, 50, .5) &amp;gt;= 49)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We found the probability of throwing 49 or more heads to be 0. But to be technically precise it is one in 375 trillion times
(= &lt;span class=&#34;math inline&#34;&gt;\(1/((1/(2^{49}) + (1/2^{50})))\)&lt;/span&gt;).&lt;/p&gt;
&lt;p&gt;Let’s visualize our simulation. The bars in red represents the sets which had 35 or more heads.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse) # ggplot2, dplyr, tidyr, readr, 
                   # purrr, tibble, stringr, forcats
library(viridis)

heads &amp;lt;- rbinom(100000, 50, 0.5)
heads &amp;lt;- data.frame(heads)
heads &amp;lt;- heads %&amp;gt;% mutate(events = ifelse(heads &amp;gt; 35, &amp;quot;&amp;gt; 35&amp;quot;, &amp;quot;&amp;lt; 35&amp;quot;))
heads %&amp;gt;%  ggplot(aes(x=heads, fill = events)) + 
  geom_histogram(binwidth = 0.5) + 
  scale_fill_manual(values = c(&amp;quot;black&amp;quot;, &amp;quot;red&amp;quot;)) +
  theme_classic() +
  theme(text = element_text(size = 18),
        legend.position = c(0.85, 0.85)) +
  labs(x = &amp;quot;Number of heads in 50 coin flips&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-an-intuitive-example-for-a-binomial-distribution_files/figure-html/install%20packages-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Binomial probability distributions help us to understand the likelihood of rare events and to set probable expected ranges.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The above plot illustrates if we randomly flip a coin 50 times, we will most likely get between 20 to 30 successes (heads) and events such as having more more than 35 successes (heads) out of 50 trials are very unlikely. The bars in &lt;strong&gt;red&lt;/strong&gt; represents the sets which had 35 or more heads.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;So what are all those will be useful for?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You can impress your friends with your ability to use binomial distributions to predict coin flipping outcomes, but let’s look at other real life applications of them.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The performance of a machine learning model&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You built a machine learning model with a binary outcome. Let’s say pathological image recognition algorithm for liver cancer that is 90% accurate. You tested 100 patients and you want to know your 95% confidence interval? Or your new results showed that your model detected less than 70 patients correctly. Is it possible? Or you should start optimizing your parameters again?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Number of patients responding to a treatment.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let’s say you have a new therapy for cancer which has 10% probability to cure a patient. You have 500 patients which took the drug. The expected number of recovering patients is 50. But in your trial 75 patients responded. Is this due to chance or a significant effect? Or you should start looking underlying factors if there is something about the therapy or the patient group?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Think about a hospital emergency station.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You are a hospital manager and you want to organize the staff numbers correctly for different weekdays. You know total number of patients came in to a emergency station because of alcohol poisoning in a given time period. You can analyse the distribution of patient numbers for each day of the week. Most likely you will have more such cases in the weekends and you need larger staff.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;This will be also true for other businesses. They can use binomial distributions to calculate changes in demand and plan accordingly.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;If you are running a Webserver.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can allocate your resources better by identifying times when traffic will be higher.&lt;/p&gt;
&lt;p&gt;Some other questions in which binomial distributions will come in handy are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Number of people who answered ‘yes’ to a survey question&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;How many games a team will win in one season?&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Vote counts for a candidate in an election.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Number of defective products in a production run.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Binomial distributions are common and they have many applications of real life situations.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We can expand binomial distributions to multinomial distributions when instead there are more than two outcomes for the single event.&lt;/p&gt;
&lt;p&gt;Such as there are 6 outcomes when rolling a die, or analyzing distributions of eye color types (Black, blue, green etc) in a population. When it is about distributions for events with multiple categories think about &lt;strong&gt;multinomial distributions.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If the number of observations(n) are large we can think of a multinomial draw as being a series of binomial draws (Gentle, 2003, pp. 198–199). For example, when rolling a die the 6 categories can be thought of a combination of 6 different binomial trials (getting 1, 2 ,3 and so on).&lt;/p&gt;
&lt;p&gt;If you are not convinced just by reading this, I will simulate how the shape of a multinomial event changes by increasing the number of trials.&lt;img src=&#34;/img/multinomial.gif&#34; alt=&#34;multinomial&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Let’s use some real life data to apply our knowledge so far. The data comes from TidyTuesday which I introduced in my last &lt;a href=&#34;https://dataatomic.com/r/tidytuesday-which-are-the-best-family-cars/&#34;&gt;post&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It contains data about Horror Movies released since 2012. And what I asked was whether horror movies are more likely be released at the 13th each month?&lt;/p&gt;
&lt;p&gt;If you are in &lt;strong&gt;the right mindset&lt;/strong&gt; anything feels better and if you are not in the mood nothing will make us happy. &lt;strong&gt;The mindset we have prior to an event influences what we will feel about an event.&lt;/strong&gt; This is at least what behavioral scientist &lt;a href=&#34;%22https://www.amazon.com/Pre-Suasion-Revolutionary-Way-Influence-Persuade-ebook/dp/B01C36E2YS&#34;&gt;Robert Cialdini’s&lt;/a&gt; research says.&lt;/p&gt;
&lt;p&gt;Imagine you are a horror movie fan and you went to the cinema. On the screen couple of ads are running just before the movie starts. You approach your mobile to turn off the voice and the date catches your attention, it is the 13th.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;And usually with the number 13 we associate cursed events. Do you think it will influence your impression about the movie?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We don’t know if this is true but &lt;strong&gt;I wanted to test whether movie makers have similar ideas and selected 13th as the release date more often than other days.&lt;/strong&gt; So, I explored Horror movies data and calculated number of releases in different days of the month.&lt;/p&gt;
&lt;p&gt;Let’s look at the data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;horror_movies &amp;lt;- readr::read_csv(&amp;quot;https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-10-22/horror_movies.csv&amp;quot;)

dim(horror_movies)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 3328   12&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;head(horror_movies)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 6 x 12
##   title genres release_date release_country movie_rating review_rating
##   &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt;        &amp;lt;chr&amp;gt;           &amp;lt;chr&amp;gt;                &amp;lt;dbl&amp;gt;
## 1 Gut ~ Drama~ 26-Oct-12    USA             &amp;lt;NA&amp;gt;                   3.9
## 2 The ~ Horror 13-Jan-17    USA             &amp;lt;NA&amp;gt;                  NA  
## 3 Slee~ Horror 21-Oct-17    Canada          &amp;lt;NA&amp;gt;                  NA  
## 4 Trea~ Comed~ 23-Apr-13    USA             NOT RATED              3.7
## 5 Infi~ Crime~ 10-Apr-15    USA             &amp;lt;NA&amp;gt;                   5.8
## 6 In E~ Horro~ 2017         UK              &amp;lt;NA&amp;gt;                  NA  
## # ... with 6 more variables: movie_run_time &amp;lt;chr&amp;gt;, plot &amp;lt;chr&amp;gt;, cast &amp;lt;chr&amp;gt;,
## #   language &amp;lt;chr&amp;gt;, filming_locations &amp;lt;chr&amp;gt;, budget &amp;lt;chr&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I need some &lt;strong&gt;data pre-processing&lt;/strong&gt; before I can make my visualizations. Dates are given in &lt;code&gt;day:month:year&lt;/code&gt; format. I need to split them to individual columns. Also couple of movies do not have the day of the month. I will remove them.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;horror_date &amp;lt;-  horror_movies %&amp;gt;% 
                separate(
                  release_date, 
                  c(&amp;quot;day&amp;quot;, &amp;quot;month&amp;quot;, &amp;quot;year&amp;quot;),
                  sep = &amp;quot;-&amp;quot;)

horror_date$day &amp;lt;- as.numeric(horror_date$day)

# Remove rows without Date of the month

horror_date &amp;lt;- horror_date %&amp;gt;% filter(day &amp;lt; 32) 

# I am excluding Day 1 from the analysis (Most aggreements starts at 1st)

horror_date_table &amp;lt;- horror_date %&amp;gt;% filter(day &amp;gt; 1)

# Let&amp;#39;s check what is the most common day in the month for a horror movie release
horror_date_table &amp;lt;-  horror_date_table %&amp;gt;%
  group_by(day) %&amp;gt;% 
  count() %&amp;gt;% 
  arrange(desc(n))
horror_date_table&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 30 x 2
## # Groups:   day [30]
##      day     n
##    &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt;
##  1    13   124
##  2    18   119
##  3    25   119
##  4    21   110
##  5    31   107
##  6    28   102
##  7    10   100
##  8    20   100
##  9     5    99
## 10     7    98
## # ... with 20 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let’s visualize.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Final
horror_date_table$day &amp;lt;- as.character(horror_date_table$day)

my_title &amp;lt;- &amp;quot;Highest number of Horror movies are released at the 13th&amp;quot;

p &amp;lt;- horror_date_table %&amp;gt;% 
    ungroup() %&amp;gt;% 
    mutate(day=fct_reorder(day, n, .desc=TRUE)) %&amp;gt;% 
    ggplot(aes(x=day, y=n)) +
    geom_col(aes(fill=n)) +
    scale_fill_viridis( direction =-1) + 
    theme(
      plot.title = element_text(size=24, color= &amp;quot;black&amp;quot;, hjust=0.5, vjust = -1),
      plot.subtitle = element_text(size=36, color= &amp;quot;red&amp;quot;, hjust=0.5, vjust = -1),
      panel.background = element_rect(fill = &amp;quot;white&amp;quot;), 
      plot.background = element_rect(fill = &amp;quot;white&amp;quot;),
      panel.grid = element_blank(),
      legend.position = &amp;quot;none&amp;quot;, 
      text = element_text(size=18), 
      axis.text.x =element_text(vjust=12, size=17, colour= &amp;quot;white&amp;quot;, face= &amp;quot;bold&amp;quot;),
      axis.title.x = element_text(vjust=9.5), 
      axis.text.y=element_blank(),
      axis.ticks= element_blank(), 
      plot.caption = element_text(hjust = 1, vjust = 10)) +
    labs(
          caption= &amp;quot;Source: IMDb, Plot: @dataatomic&amp;quot;,
          x = &amp;quot;Day of the Month&amp;quot;, 
          y = &amp;quot;Number of movies released&amp;quot;,
          title = my_title) +
    geom_label(aes(label = n), size=5, fill=&amp;quot;yellow&amp;quot;, alpha=0.9) 
p&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-an-intuitive-example-for-a-binomial-distribution_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;is-this-significant&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Is this significant?&lt;/h1&gt;
&lt;p&gt;In the data, there were &lt;strong&gt;2782&lt;/strong&gt; movies associated with a release date. So expected movie release per day is &lt;strong&gt;92&lt;/strong&gt; (2782 / 30).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;This is a good example of a multinomial probability distribution with 30 categories, and since the number of samples are large it will approximate a binomial distribution.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Thus, we can apply binomial probability distributions for calculating the probabilities in our multinomial data.&lt;/p&gt;
&lt;p&gt;We saw above that in some days more movies are released than the expected value. What we want to know is, which days are in the &lt;strong&gt;range of random chance&lt;/strong&gt; and which days there is a &lt;strong&gt;significant preference or an aversion&lt;/strong&gt; to release a movie.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Size of our distribution is the total number of movies released 
n_value &amp;lt;- horror_date_table %&amp;gt;% ungroup() %&amp;gt;% summarize(n2 = sum(n))
size &amp;lt;- n_value$n2
size&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 2782&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# The probability (= success rate = a given outcome to occur = movie released)
p &amp;lt;-  1/30  # Since it can occur any of the 30 days in a months&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can simulate this 2782 movie release dates events 100.000 times with rbinom function and calculate the mean and variance.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Simulated statistics
 
estimates &amp;lt;-  rbinom(100000, 2782, 1/30)

# Simulated mean
mean(estimates)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 92.73831&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Simulated variance
var(estimates)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 90.01739&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The average value is around 92 movies released in one day.&lt;/p&gt;
&lt;p&gt;We can also calculate theoretical values by the derived mathematical formulas that define the binomial function:&lt;/p&gt;
&lt;p&gt;Mean = size * p&lt;br /&gt;
Variance = size * p * (1 - p)&lt;/p&gt;
&lt;p&gt;Let’s calculate.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Theoretical statistics

# Expected mean = size * p
mean_theoretical &amp;lt;- 2782 * 1/30
mean_theoretical&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 92.73333&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Expected Variance = size * p * (1-p)
var_theoretical &amp;lt;- size * 1/30 * (1-1/30)
var_theoretical&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 89.64222&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Great, simulated and theoretical values are almost the same. So, I can use my simulations to find out 95% confidence interval which will contain the values that can happen due to random chance.&lt;/p&gt;
&lt;p&gt;I will define an interval that contains 95% of probabilities in our simulated distributions. And the values outside will be the ones which were not due to random chance. To do this I need 2.5th and 97.5th quantiles of the distribution.&lt;/p&gt;
&lt;p&gt;We can do this by the &lt;strong&gt;qbinom()&lt;/strong&gt; function in r. For example qbinom(0.975, size, p) will return the value which will define the cut off which contains 0.975 of the probabilities. And our confidence interval will be the interval between:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;qbinom(0.025, size, p)&lt;/strong&gt; &amp;lt; Confidence Interval &amp;lt; &lt;strong&gt;qbinom(0.975, size, p)&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Boundaries for p values smaller than 0.05

lower &amp;lt;- qbinom(0.975, 2782, 1/30)
lower&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 112&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;upper &amp;lt;- qbinom(0.025, 2782, 1/30)
upper&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 75&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;movies &amp;lt;- rbinom(100000, 2782, 1/30)
movies &amp;lt;- data.frame(movies)
movies &amp;lt;- movies %&amp;gt;% mutate(events = ifelse(movies &amp;gt; qbinom(.025, 2782, 1/30) &amp;amp; movies &amp;lt;  qbinom(.975, 2782, 1/30), &amp;quot;95% Conf. Int.&amp;quot;, &amp;quot;significant&amp;quot;))
movies %&amp;gt;%  ggplot(aes(x=movies, fill = events)) + 
  geom_histogram(binwidth = 0.5) + 
  scale_fill_manual(values = c(&amp;quot;black&amp;quot;, &amp;quot;red&amp;quot;)) +
  theme_classic() +
  theme(text = element_text(size = 18),
        legend.position = c(0.85, 0.85)) +
  labs(x = &amp;quot;Number of movie releases in a day&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-an-intuitive-example-for-a-binomial-distribution_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;95% of the time, a specific day of month will have between 75 and 112 movie releases. Higher or lower values than this range can not happen due to random chance according to our probability distribution.&lt;/p&gt;
&lt;p&gt;124 movies released at the 13th of any month. This value is above the 97.5th quantile. So it is significant. But what is the exact p value? Let’s define p value first.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;how-to-calculate-the-p-value-for-a-binomial-test-using-pbinom&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;How to calculate the p-value for a binomial test using pbinom?&lt;/h1&gt;
&lt;p&gt;&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    P value is the sum of the probability of that event plus the sum of the probabilities of similar events that are equally likely or less likely.
  &lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;For example in coin flipping, probability of heads is (0.5). If we follow our definition, p value is the sum of the probability of that event (0.5) and similar events which is equally or less likely i.e. tails (0.5). This makes our p value 0.5 + 0.5 = 1.&lt;/p&gt;
&lt;p&gt;Similarly, in our horror movie data this will be the sum of the probabilities of getting 124 movie releases or events that are equally probable or rarer.&lt;/p&gt;
&lt;p&gt;In R, &lt;strong&gt;pbinom&lt;/strong&gt; function defines the cumulative probabilities. For example, pbinom(124, 2782, 1/30) will give us the cumulative probabilities of any number of movie releases up to 124. By using 1-pbinom(124, 2782, 1/30) we can find the sum of the probabilities with equal or lower chance than having 124.&lt;/p&gt;
&lt;p&gt;Thus, p value for getting at least 124 movie release is;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Probability of getting at least 124 movie releases (e.g. the 13th)

p_val_binom &amp;lt;- 2 * (1 - pbinom(124, 2782, 1/30))
p_val_binom&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.001335455&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We multiplied by two because same rare events can happen in the left side of our confidence interval as well.&lt;/p&gt;
&lt;p&gt;Let’s put those p values on our barplot to highlight the significant days.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# I will add a new column so I can separately define values outside the 95% confidence interval.

horror_date_table &amp;lt;- horror_date_table %&amp;gt;% 
                     mutate(p_val = 2 * (1 - pbinom(n, 2782, 1/30, 
                            lower.tail = ifelse(n&amp;gt;93, TRUE, FALSE)))) %&amp;gt;% 
                     mutate(p_val = cut(p_val, breaks = c(-Inf, 0.001, 0.01, 0.05, Inf), 
                                        labels = c(&amp;quot;&amp;lt; 0.001&amp;quot;,&amp;quot;&amp;lt; 0.01&amp;quot;, &amp;quot;&amp;lt; 0.05&amp;quot;, &amp;quot;NS&amp;quot;)))      

# Visualize the significant days 
p_ci &amp;lt;- horror_date_table %&amp;gt;% 
    ungroup() %&amp;gt;% 
    mutate(day=fct_reorder(day, n, .desc=TRUE)) %&amp;gt;% 
    ggplot(aes(x=day, y=n)) +
    geom_col(aes(fill=p_val)) +
    scale_fill_manual(values = viridis(4))  + 
    theme(
        plot.title = element_text(size=24, color= &amp;quot;black&amp;quot;, hjust=0.5, vjust = -1),
        plot.subtitle = element_text(size=36, color= &amp;quot;red&amp;quot;, hjust=0.5, vjust = -1),
        panel.background = element_rect(fill = &amp;quot;white&amp;quot;), 
        plot.background = element_rect(fill = &amp;quot;white&amp;quot;),
        panel.grid = element_blank(),
        text = element_text(size=18), 
        axis.text.x =element_text(vjust=12, size=17, colour= &amp;quot;white&amp;quot;, face= &amp;quot;bold&amp;quot;),
        axis.title.x = element_text(vjust=9.5), 
        axis.text.y=element_blank(),
        axis.ticks= element_blank(), 
        plot.caption = element_text(hjust = 1, vjust = 10)) +
    labs(
        caption= &amp;quot;&amp;quot;,
        x = &amp;quot;Day of the Month&amp;quot;, 
        y = &amp;quot;Number of movies released&amp;quot;,
        title = &amp;quot;Calculating p values in binomial distributions&amp;quot;) +
    geom_label(aes(label = n), size=5, fill=&amp;quot;yellow&amp;quot;, alpha=0.9) 
p_ci&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-10-28-an-intuitive-example-for-a-binomial-distribution_files/figure-html/6-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We tested our hypothesis about movie makers and calculated the p value and used the pbinom() function and found couple of other days where movies are more or less likely to be released.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;However, another widely used way to calculate p values is to calculate the mean of the distribution and its standard deviation and to verify how many standard deviations the observed value is away from the mean (the z score).&lt;/strong&gt;&lt;/p&gt;
&lt;div id=&#34;calculating-the-p-value-by-normal-approximation&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Calculating the p-value by normal approximation&lt;/h3&gt;
&lt;p&gt;When the sample size is large, binomial distributions can be approximated by a normal distribution. To build the normal distribution, I need mean and standard deviation. I can calculate this from the horror movie data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sample_mean &amp;lt;- horror_date_table %&amp;gt;% ungroup() %&amp;gt;% summarise(n=mean(n))
sample_mean&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 1 x 1
##       n
##   &amp;lt;dbl&amp;gt;
## 1  92.7&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p &amp;lt;- 1/30

sample_variance &amp;lt;-  2782 * p * (1-p)
sample_variance&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 89.64222&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sample_sd &amp;lt;- sqrt(sample_variance)
sample_sd&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 9.467958&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I can calculate the z-score for our observation of 124 movies that are released on the 13th. &lt;strong&gt;Simply, z-score is: how many standard deviations an observation is away from the mean.&lt;/strong&gt; Since 95% of the observations will fall within 1.96 standard deviations from the mean in a normal distribution, a higher z-score will show that our p value is indeed significant.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Calculate z-score for observation 13th of the month = 124 movies are 
# released
observation &amp;lt;- 124
z_score &amp;lt;- (observation - sample_mean) / sample_sd
z_score&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##          n
## 1 3.302367&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I can calculate the exact p value by using a normal distribution function pnorm() and the z score we found.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Calculate the p-value of observing 124 or more movie releases in a day

p_val_nor &amp;lt;- 2 * pnorm(3.302, lower.tail = FALSE)
p_val_nor&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.0009599807&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As expected, I found similar values (Normal: &lt;strong&gt;0.00095&lt;/strong&gt;, Binomial: &lt;strong&gt;0.00133&lt;/strong&gt;) by using an approximation of a normal distribution and by using binomial distributions. Both methods proves that Horror movies are more likely to be released at the 13th.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;future-thoughts-conclusions&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Future thoughts / Conclusions&lt;/h1&gt;
&lt;p&gt;Many events in real life can be explained by binomial probability distributions, and they allow us to calculate whether or not the events happened due to random chance and test our hypotheses.&lt;/p&gt;
&lt;p&gt;It can be a fun data analysis such as in horror movies, or more serious subjects like testing of new medicines or predicting accuracy of machine learning algorithms detecting diseases.&lt;/p&gt;
&lt;p&gt;Until next time!&lt;/p&gt;
&lt;p&gt;Serdar&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
